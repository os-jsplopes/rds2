# Workflow that will trigger the build validation
# then create or update a pull request on master branch

name: CI Hotfix Branches

on:
  push:
    branches: [hotfix/*]

jobs:
  build:
    name: Build package hotfix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@${{env.PACKAGE_SCOPE}}"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Get Hotfix Package Id
        uses: ./.github/actions/ms # Replace with octokit/graphql-action@v2.x after commiting the fix
        id: get_package_id
        with:
          query: |
            query($owner:String!, $reponame:String!, $version:String!) {
              repository(owner:$owner, name:$reponame) {
                 packages(names:[$reponame], last:1) {
                  edges {
                    node {
                      version(version:$version){
                        id
                      }
                    }
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          reponame: ${{ github.event.repository.name }}
          version: "0.1.0"
          mediaType: '{"previews": ["packages"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-update-pull-request:
    needs: [build]
    name: Create/Update pull request to master
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Read pull request template
        id: pr_template
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.github/PULL_REQUEST_TEMPLATE.md
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          pr_title: "Hotfix: ${{github.event.head_commit.message}}"
          pr_body: ${{steps.pr_template.outputs.content}}
          pr_assignee: ${{github.actor}}
          pr_label: "Work In Progress,bug"
          pr_draft: true
          github_token: ${{ secrets.GAT }}
